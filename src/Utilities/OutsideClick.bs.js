// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";

function useOutsideClick(refs, containerRefs, isActive, eventsOpt, callback, param) {
  var events = eventsOpt !== undefined ? eventsOpt : ["click"];
  var useEvent0 = function (callback) {
    var callbackRef = React.useRef(callback);
    React.useEffect((function () {
            callbackRef.current = callback;
            
          }), [callback]);
    return React.useCallback((function (param) {
                  return Curry._1(callbackRef.current, undefined);
                }), []);
  };
  var eventCallback = useEvent0(callback);
  React.useEffect((function () {
          if (!isActive) {
            return ;
          }
          var handleClick = function (e) {
            var targ = e.target;
            var isInsideClick;
            isInsideClick = refs.TAG === /* ArrayOfRef */0 ? refs._0.reduce((function (acc, ref) {
                      var element = ref.current;
                      var isClickInsideRef = (element == null) ? false : element.contains(targ);
                      if (acc) {
                        return true;
                      } else {
                        return isClickInsideRef;
                      }
                    }), false) : refs._0.current.slice(0, -1).reduce((function (acc, ref) {
                      var isClickInsideRef = (ref == null) ? false : ref.contains(targ);
                      if (acc) {
                        return true;
                      } else {
                        return isClickInsideRef;
                      }
                    }), false);
            var isClickInsideOfContainer;
            if (containerRefs !== undefined) {
              var element = containerRefs.current;
              isClickInsideOfContainer = (element == null) ? false : element.contains(targ);
            } else {
              isClickInsideOfContainer = true;
            }
            if (!isInsideClick && isClickInsideOfContainer) {
              return Curry._1(eventCallback, undefined);
            }
            
          };
          setTimeout((function (param) {
                  events.forEach(function ($$event) {
                        window.addEventListener($$event, handleClick);
                        
                      });
                  
                }), 50);
          return (function (param) {
                    events.forEach(function ($$event) {
                          window.removeEventListener($$event, handleClick);
                          
                        });
                    
                  });
        }), [isActive]);
  
}

export {
  useOutsideClick ,
  
}
/* react Not a pure module */
